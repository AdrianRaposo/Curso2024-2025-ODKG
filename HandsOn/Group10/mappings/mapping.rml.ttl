@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix fnml: <http://semweb.mmlab.be/ns/fnml#> .
@prefix fno: <https://w3id.org/function/ontology#> .
@prefix bicimap: <https://bicimap.com/ontology#> .
@prefix schema: <https://schema.org/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .


<#BiketripsMapping>
    rml:logicalSource [
        rml:source "biketrips.csv" ;
        rml:referenceFormulation ql:CSV
    ] ;

    rr:subjectMap [
        rr:template "http://bicimap.com/biketrip/{id_Bike}-{unlock_date}" ;
        rr:class bicimap:BikeTrip
    ] ;

    rr:predicateObjectMap [ # TEMPLATE TO FOLLOW
        rr:predicateMap [
            rr:constant bicimap:bikeId;
            rr:termType rr:IRI
        ] ;
        rr:objectMap [
            rml:column "id_Bike" ;
            rr:termType rr:Literal ;
            rr:datatype xsd:integer
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicateMap [
            rr:constant bicimap:tripMinutes;
            rr:termType rr:IRI
        ] ;
        rr:objectMap [
            rml:column "duration" ;
            rr:termType rr:Literal ;
            rr:datatype xsd:double
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicateMap [
            rr:constant bicimap:lockDate;
            rr:termType rr:IRI
        ] ;
        rr:objectMap [
            rml:column "lock_date" ;
            rr:termType rr:Literal ;
            rr:datatype xsd:datetime
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicateMap [
            rr:constant bicimap:unlockDate;
            rr:termType rr:IRI
        ] ;
        rr:objectMap [
            rml:column "unlock_date" ;
            rr:termType rr:Literal ;
            rr:datatype xsd:datetime
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicateMap [
            rr:constant bicimap:unlockDock;
            rr:termType rr:IRI
        ] ;
        rr:objectMap [
            rml:column "unlock_dock" ;
            rr:termType rr:Literal ;
            rr:datatype xsd:integer
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicateMap [
            rr:constant bicimap:lockDock;
            rr:termType rr:IRI
        ] ;
        rr:objectMap [
            rml:column "lock_dock" ;
            rr:termType rr:Literal ;
            rr:datatype xsd:integer
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicateMap [
            rr:constant bicimap:startAt;
            rr:termType rr:IRI
        ] ;
        rr:objectMap [
          rr:parentTriplesMap <#FreeMap>;
          rr:joinCondition [
            rr:child "start_id";
            rr:parent "id"
          ]
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicateMap [
            rr:constant bicimap:endAt ;
            rr:termType rr:IRI
        ] ;
        rr:objectMap [
            rr:parentTriplesMap <#FreeMap> ;
            rr:joinCondition [
                rr:child "end_id" ;
                rr:parent "id"
            ]
        ]
    ] ;


    rr:predicateObjectMap [
        rr:predicateMap [
            rr:constant bicimap:startAt;
            rr:termType rr:IRI
        ] ;
        rr:objectMap [
          rr:parentTriplesMap <#StationMap>;
          rr:joinCondition [
            rr:child "start_id";
            rr:parent "id"
          ]
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicateMap [
            rr:constant bicimap:endAt;
            rr:termType rr:IRI
        ] ;
        rr:objectMap [
          rr:parentTriplesMap <#StationMap>;
          rr:joinCondition [
            rr:child "end_id";
            rr:parent "id"
          ]
        ]
    ] .


<#FreeMap>
    rml:logicalSource [
        rml:source "free_places.csv" ;
        rml:referenceFormulation ql:CSV
    ] ;

    rr:subjectMap [
        rr:template "http://bicimap.com/place/free/{id_free_place}" ;
        rr:class schema:Place
    ] ;

    rr:predicateObjectMap [
        rr:predicate schema:address ;
        rr:objectMap [
            rml:column "address" ;
            rr:termType rr:Literal
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate schema:latitude ;
        rr:objectMap [
            rml:column "latitude" ;
            rr:termType rr:Literal
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate schema:longitude ;
        rr:objectMap [
            rml:column "longitude" ;
            rr:termType rr:Literal
        ]
    ] .

<#StationMap>
    rml:logicalSource [
        rml:source "stations.csv" ;
        rml:referenceFormulation ql:CSV
    ] ;

    rr:subjectMap [
        rr:template "http://bicimap.com/place/station/{id_station}" ;
        rr:class bicimap:BikeStation
    ] ;

    rr:predicateObjectMap [
        rr:predicate rdfs:label ;
        rr:objectMap [
            rml:column "station_name" ;
            rr:termType rr:Literal
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate schema:address ;
        rr:objectMap [
            rml:column "address" ;
            rr:termType rr:Literal
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate rdfs:label ;
        rr:objectMap [
            rml:column "address" ;
            rr:termType rr:Literal
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate schema:latitude ;
        rr:objectMap [
            rml:column "latitude" ;
            rr:termType rr:Literal
        ]
    ] ;

    rr:predicateObjectMap [
        rr:predicate schema:longitude ;
        rr:objectMap [
            rml:column "longitude" ;
            rr:termType rr:Literal
        ]
    ] .